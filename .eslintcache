[{"/Users/dinovatiemobile/Desktop/sample-web3/src/index.js":"1","/Users/dinovatiemobile/Desktop/sample-web3/src/reportWebVitals.js":"2","/Users/dinovatiemobile/Desktop/sample-web3/src/App.jsx":"3","/Users/dinovatiemobile/Desktop/sample-web3/src/context/Web3Context.js":"4","/Users/dinovatiemobile/Desktop/sample-web3/src/context/AppContext.js":"5","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/index.jsx":"6","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/index.jsx":"7","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/components/BalanceToken.jsx":"8","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/components/BalanceWallet.jsx":"9","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/index.jsx":"10","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/components/TransferForm/index.jsx":"11","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/components/Transaction/index.jsx":"12"},{"size":535,"mtime":1652693524236,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1652693524237,"results":"15","hashOfConfig":"14"},{"size":886,"mtime":1652759617851,"results":"16","hashOfConfig":"14"},{"size":3079,"mtime":1652772754841,"results":"17","hashOfConfig":"14"},{"size":419,"mtime":1652693524234,"results":"18","hashOfConfig":"14"},{"size":1857,"mtime":1652762747163,"results":"19","hashOfConfig":"14"},{"size":357,"mtime":1652762774931,"results":"20","hashOfConfig":"14"},{"size":1320,"mtime":1652772363582,"results":"21","hashOfConfig":"14"},{"size":750,"mtime":1652773280585,"results":"22","hashOfConfig":"14"},{"size":907,"mtime":1652773599585,"results":"23","hashOfConfig":"14"},{"size":3072,"mtime":1652772533181,"results":"24","hashOfConfig":"14"},{"size":2199,"mtime":1652776052963,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xxmgv",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dinovatiemobile/Desktop/sample-web3/src/index.js",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/reportWebVitals.js",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/App.jsx",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/context/Web3Context.js",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/context/AppContext.js",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/index.jsx",["53","54","55"],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/index.jsx",[],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/components/BalanceToken.jsx",["56"],"import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport minABI from '../../../../../abi/sample.json'\n\nconst tokenAddress = \"0x13512979ADE267AB5100878E2e0f485B568328a4\"; //USDT\n\n\nconst BalanceToken = ({ currentAccount }) => {\n    const [balance, setBalance] = useState(null);\n    const [symbol, setSymbol] = useState(null);\n\n    useEffect(() => {\n        const getBalance = async () => {\n            try {\n                const myWeb3 = new Web3(window.ethereum);\n                let contract = new myWeb3.eth.Contract(minABI, tokenAddress);\n                let bal = await contract.methods.balanceOf(currentAccount).call();\n                let sym = await contract.methods.symbol().call();\n                return { bal, sym };\n            }\n            catch (err) {\n                console.log(err)\n                return { bal: null, sym: null }\n            }\n        }\n        getBalance().then(function (result) {\n            const { bal, sym } = result\n            setBalance(bal)\n            setSymbol(sym)\n        });\n    }, [])\n\n    const renderContent = () => {\n        return (\n            <>     {balance && (\n                <div>Balance Token: {balance} {symbol}</div>)}\n            </>\n        );\n    };\n\n    return <div >{renderContent()}</div>;\n};\n\nexport default BalanceToken",["57","58"],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Balance/components/BalanceWallet.jsx",["59"],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/index.jsx",["60","61"],"/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/components/TransferForm/index.jsx",["62","63","64","65","66"],"import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport minABI from '../../../../../../abi/sample.json'\nimport { Input, Button, Form, Tabs, Card } from 'antd'\nimport BigNumber from 'bignumber.js'\nconst tokenAddress = \"0x13512979ADE267AB5100878E2e0f485B568328a4\";\n\nconst TransferForm = ({ transferType, currentAccount }) => {\n\n    const sendNative = async (from, to, value) => {\n        try {\n            const myWeb3 = new Web3(window.ethereum);\n            myWeb3.eth.sendTransaction({ from: from, to: to, value: myWeb3.utils.toWei(value.toString()) })\n                .then(result => {\n                    console.log(result);\n                });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    const sendErc20 = async (data) => {\n        try {\n            const myWeb3 = new Web3(window.ethereum);\n            const contract = new myWeb3.eth.Contract(minABI, data.contractAddress);\n            const decimals = await contract.methods.decimals().call();\n            const amount = new BigNumber(data.value).multipliedBy(BigNumber(10).pow(decimals));\n            contract.methods.transfer(data.to, amount).send({ from: data.from })\n                .on('transactionHash', function (hash) {\n                    console.log(hash);\n                });\n            return null;\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    const transfer = (value) => {\n        //0xd9A3f6930DE4e246627710cF4D6c74f42825a0b4\n        //123321123321000\n\n        if (transferType === 'native') {\n            sendNative(currentAccount, value.receiverAddress, value.amount);\n        } else if (transferType === 'erc20') {\n            sendErc20({ from: currentAccount, to: value.receiverAddress, value: Number(value.amount), contractAddress: value.contractAddress });\n        }\n    }\n\n    return (\n        <Form\n            name={transferType}\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 14 }}\n            onFinish={transfer}\n        >\n            <Form.Item\n                label=\"Receiver Address\"\n                name=\"receiverAddress\"\n                rules={[{ required: true, message: 'Please input receiver address!' }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Amount\"\n                name=\"amount\"\n                rules={[{ required: true, message: 'Please input amount!' }]}\n            >\n                <Input />\n            </Form.Item>\n            {transferType === 'erc20' && (\n                <Form.Item\n                    label=\"Contract Address\"\n                    name=\"contractAddress\"\n                    rules={[{ required: true, message: 'Please input contract address!' }]}>\n                    <Input />\n                </Form.Item>)}\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\n\nexport default TransferForm;\n","/Users/dinovatiemobile/Desktop/sample-web3/src/pages/Metamask/components/Transfering/components/Transaction/index.jsx",["67","68"],{"ruleId":"69","severity":1,"message":"70","line":1,"column":29,"nodeType":"71","messageId":"72","endLine":1,"endColumn":38},{"ruleId":"69","severity":1,"message":"73","line":1,"column":40,"nodeType":"71","messageId":"72","endLine":1,"endColumn":48},{"ruleId":"69","severity":1,"message":"74","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":31,"column":8,"nodeType":"77","endLine":31,"endColumn":10,"suggestions":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"76","line":17,"column":8,"nodeType":"77","endLine":17,"endColumn":10,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"73","line":1,"column":28,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"73","line":1,"column":28,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"84","line":4,"column":31,"nodeType":"71","messageId":"72","endLine":4,"endColumn":35},{"ruleId":"69","severity":1,"message":"85","line":4,"column":37,"nodeType":"71","messageId":"72","endLine":4,"endColumn":41},{"ruleId":"69","severity":1,"message":"86","line":6,"column":7,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":1,"column":28,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":50,"column":8,"nodeType":"77","endLine":50,"endColumn":10,"suggestions":"87"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentAccount'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["91"],"'Tabs' is defined but never used.","'Card' is defined but never used.","'tokenAddress' is assigned a value but never used.",["92"],{"desc":"93","fix":"94"},"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"95"},{"desc":"93","fix":"96"},"Update the dependencies array to be: [currentAccount]",{"range":"97","text":"98"},{"range":"99","text":"98"},{"range":"100","text":"98"},[1060,1062],"[currentAccount]",[538,540],[1982,1984]]